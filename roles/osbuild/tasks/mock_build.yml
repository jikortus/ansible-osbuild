---

- name: Set variables
  set_fact:
    mock_config_id: "{{ (ansible_distribution == 'RedHat') | ternary('rhel', 'fedora') }}"
    mock_config_version: "{{ ansible_distribution_major_version }}"
    mock_config_arch: "{{ ansible_architecture }}"
    git_repos_dir: "/tmp/git_repos"
    workspace: "{{ lookup('env', 'WORKSPACE') }}"
    short_version: "{{ ansible_distribution_version | replace('.', '') }}"

- name: Set more variables
  set_fact:
    mock_config: "{{ mock_config_id }}-{{ mock_config_version }}-{{ mock_config_arch }}"
    yum_repo_dir: "/tmp/mock_repo/repo/{{ mock_config_id }}{{ short_version }}"

- name: Install packages
  dnf:
    name:
      - createrepo_c
      - mock
    state: present
  become: yes

- name: Read in the RHEL 8 repository configuration
  slurp:
    src: "/etc/yum.repos.d/rhel8.repo"
  register: rhel_repos
  when:
    - ansible_distribution == 'RedHat'

- name: Replace RHEL 8 mock template
  template:
    src: rhel-8.tpl
    dest: /etc/mock/templates/rhel-8.tpl
  become: yes
  when:
    - ansible_distribution == 'RedHat'

- name: Create directory for git repos
  file:
    path: "{{ git_repos_dir }}"
    state: directory

- name: Clone each repository
  git:
    repo: "https://github.com/osbuild/{{ item.repo_name }}"
    dest: "{{ git_repos_dir }}/{{ item.repo_name }}"
    version: "{{ item.version }}"
    refspec: "+refs/pull/*:refs/heads/*"
  loop:
    - repo_name: osbuild
      version: "{{ osbuild_version }}"
    - repo_name: osbuild-composer
      version: "{{ osbuild_composer_version }}"

- name: Build source RPMs
  command: "make -C {{ git_repos_dir }}/{{ item }} srpm"
  loop:
    - osbuild
    - osbuild-composer

- name: Find the source RPMs we built
  find:
    paths: "{{ git_repos_dir }}"
    patterns: "*.src.rpm"
    recurse: yes
  register: source_rpms

- name: Initialize the mock chroot
  command: "mock -r {{ mock_config }} --no-bootstrap-chroot --init"
  become: yes

- name: Create a directory to hold the RPMs we build
  file:
    path: "{{ yum_repo_dir }}"
    state: directory

- name: Build the source RPMs in the mock
  command: |
    mock -r {{ mock_config }} --no-bootstrap-chroot \
      --resultdir {{ yum_repo_dir }}/ --with=tests \
      {{ source_rpms.files | map(attribute='path') | list | join(' ') }}
  become: yes

- name: Create a repo from the RPMs
  command: "createrepo_c {{ yum_repo_dir }}"

